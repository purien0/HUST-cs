\contentsline {section}{\numberline {1}基于链式存储结构的线性表实现}{1}{section.1}%
\contentsline {subsection}{\numberline {1.1}问题描述}{1}{subsection.1.1}%
\contentsline {subsection}{\numberline {1.2}系统设计}{1}{subsection.1.2}%
\contentsline {subsubsection}{\numberline {1.2.1}演示系统菜单的组织架构}{1}{subsubsection.1.2.1}%
\contentsline {subsubsection}{\numberline {1.2.2}ADT数据结构设计}{2}{subsubsection.1.2.2}%
\contentsline {subsection}{\numberline {1.3}系统实现}{3}{subsection.1.3}%
\contentsline {subsubsection}{\numberline {1.3.1}程序开发环境与语言}{3}{subsubsection.1.3.1}%
\contentsline {subsubsection}{\numberline {1.3.2}代码的组织结构}{3}{subsubsection.1.3.2}%
\contentsline {subsubsection}{\numberline {1.3.3}单链表基础运算算法实现}{4}{subsubsection.1.3.3}%
\contentsline {subsubsubsection}{\numberline {1)}初始化表}{4}{subsubsubsection.1.3.3.1}%
\contentsline {subsubsubsection}{\numberline {2)}销毁表}{5}{subsubsubsection.1.3.3.2}%
\contentsline {subsubsubsection}{\numberline {3)}清空表}{6}{subsubsubsection.1.3.3.3}%
\contentsline {subsubsubsection}{\numberline {4)}表判空}{6}{subsubsubsection.1.3.3.4}%
\contentsline {subsubsubsection}{\numberline {5)}求表长}{6}{subsubsubsection.1.3.3.5}%
\contentsline {subsubsubsection}{\numberline {6)}获取元素}{7}{subsubsubsection.1.3.3.6}%
\contentsline {subsubsubsection}{\numberline {7)}定位元素}{7}{subsubsubsection.1.3.3.7}%
\contentsline {subsubsubsection}{\numberline {8)}获得前驱}{8}{subsubsubsection.1.3.3.8}%
\contentsline {subsubsubsection}{\numberline {9)}求后继}{8}{subsubsubsection.1.3.3.9}%
\contentsline {subsubsubsection}{\numberline {10)}插入元素}{8}{subsubsubsection.1.3.3.10}%
\contentsline {subsubsubsection}{\numberline {11)}删除元素}{10}{subsubsubsection.1.3.3.11}%
\contentsline {subsubsubsection}{\numberline {12)}遍历链表}{10}{subsubsubsection.1.3.3.12}%
\contentsline {subsubsubsection}{\numberline {13)}链表的翻转}{10}{subsubsubsection.1.3.3.13}%
\contentsline {subsubsubsection}{\numberline {14)}删除链表的倒数第 n 个节点}{11}{subsubsubsection.1.3.3.14}%
\contentsline {subsubsubsection}{\numberline {15)}链表排序}{11}{subsubsubsection.1.3.3.15}%
\contentsline {subsubsubsection}{\numberline {16)}读入文件}{11}{subsubsubsection.1.3.3.16}%
\contentsline {subsubsubsection}{\numberline {17)}写入文件}{11}{subsubsubsection.1.3.3.17}%
\contentsline {subsubsection}{\numberline {1.3.4}多线性表系统运算算法实现}{12}{subsubsection.1.3.4}%
\contentsline {subsubsubsection}{\numberline {1)}添加线性表}{12}{subsubsubsection.1.3.4.1}%
\contentsline {subsubsubsection}{\numberline {2)}删除线性表}{12}{subsubsubsection.1.3.4.2}%
\contentsline {subsubsubsection}{\numberline {3)}查找线性表}{12}{subsubsubsection.1.3.4.3}%
\contentsline {subsubsubsection}{\numberline {4)}遍历线性表}{12}{subsubsubsection.1.3.4.4}%
\contentsline {subsubsubsection}{\numberline {5)}重命名线性表}{12}{subsubsubsection.1.3.4.5}%
\contentsline {subsection}{\numberline {1.4}系统测试}{13}{subsection.1.4}%
\contentsline {subsubsection}{\numberline {1.4.1}单线性表系统测试}{13}{subsubsection.1.4.1}%
\contentsline {subsubsection}{\numberline {1.4.2}多线性表系统测试}{24}{subsubsection.1.4.2}%
\contentsline {subsection}{\numberline {1.5}实验小结}{28}{subsection.1.5}%
\contentsline {subsubsection}{\numberline {1.5.1}无法第二次进入多表系统}{28}{subsubsection.1.5.1}%
\contentsline {subsubsection}{\numberline {1.5.2}从多表系统进入单表系统后数据丢失}{28}{subsubsection.1.5.2}%
\contentsline {section}{\numberline {2}基于邻接表的图实现}{30}{section.2}%
\contentsline {subsection}{\numberline {2.1}问题描述}{30}{subsection.2.1}%
\contentsline {subsection}{\numberline {2.2}系统设计}{30}{subsection.2.2}%
\contentsline {subsubsection}{\numberline {2.2.1}演示系统菜单的组织架构}{30}{subsubsection.2.2.1}%
\contentsline {subsubsection}{\numberline {2.2.2}ADT数据结构设计}{31}{subsubsection.2.2.2}%
\contentsline {subsection}{\numberline {2.3}系统实现}{33}{subsection.2.3}%
\contentsline {subsubsection}{\numberline {2.3.1}程序开发环境与语言}{33}{subsubsection.2.3.1}%
\contentsline {subsubsection}{\numberline {2.3.2}代码的组织结构}{33}{subsubsection.2.3.2}%
\contentsline {subsubsection}{\numberline {2.3.3}单图基础运算算法实现}{34}{subsubsection.2.3.3}%
\contentsline {subsubsubsection}{\numberline {1)}创建图}{34}{subsubsubsection.2.3.3.1}%
\contentsline {subsubsubsection}{\numberline {2)}销毁图}{34}{subsubsubsection.2.3.3.2}%
\contentsline {subsubsubsection}{\numberline {3)}查找顶点}{35}{subsubsubsection.2.3.3.3}%
\contentsline {subsubsubsection}{\numberline {4)}顶点赋值}{36}{subsubsubsection.2.3.3.4}%
\contentsline {subsubsubsection}{\numberline {5)}第一邻接点}{36}{subsubsubsection.2.3.3.5}%
\contentsline {subsubsubsection}{\numberline {6)}下一邻接点}{36}{subsubsubsection.2.3.3.6}%
\contentsline {subsubsubsection}{\numberline {7)}插入顶点}{37}{subsubsubsection.2.3.3.7}%
\contentsline {subsubsubsection}{\numberline {8)}删除顶点}{37}{subsubsubsection.2.3.3.8}%
\contentsline {subsubsubsection}{\numberline {9)}插入弧}{37}{subsubsubsection.2.3.3.9}%
\contentsline {subsubsubsection}{\numberline {10)}删除弧}{38}{subsubsubsection.2.3.3.10}%
\contentsline {subsubsubsection}{\numberline {11)}深度优先遍历}{39}{subsubsubsection.2.3.3.11}%
\contentsline {subsubsubsection}{\numberline {12)}广度优先遍历}{39}{subsubsubsection.2.3.3.12}%
\contentsline {subsubsubsection}{\numberline {13)}距离小于k的顶点集合}{40}{subsubsubsection.2.3.3.13}%
\contentsline {subsubsubsection}{\numberline {14)}顶点间最短路径和长度}{40}{subsubsubsection.2.3.3.14}%
\contentsline {subsubsubsection}{\numberline {15)}计算图的联通分量}{40}{subsubsubsection.2.3.3.15}%
\contentsline {subsubsubsection}{\numberline {16)}图的文件存储}{40}{subsubsubsection.2.3.3.16}%
\contentsline {subsubsubsection}{\numberline {17)}图的文件读取}{40}{subsubsubsection.2.3.3.17}%
\contentsline {subsubsection}{\numberline {2.3.4}多图系统运算算法实现}{41}{subsubsection.2.3.4}%
\contentsline {subsubsubsection}{\numberline {1)}添加图}{41}{subsubsubsection.2.3.4.1}%
\contentsline {subsubsubsection}{\numberline {2)}删除图}{41}{subsubsubsection.2.3.4.2}%
\contentsline {subsubsubsection}{\numberline {3)}查找图}{41}{subsubsubsection.2.3.4.3}%
\contentsline {subsubsubsection}{\numberline {4)}遍历图}{41}{subsubsubsection.2.3.4.4}%
\contentsline {subsubsubsection}{\numberline {5)}重命名图}{41}{subsubsubsection.2.3.4.5}%
\contentsline {subsection}{\numberline {2.4}系统测试}{42}{subsection.2.4}%
\contentsline {subsubsection}{\numberline {2.4.1}单图系统测试}{42}{subsubsection.2.4.1}%
\contentsline {subsubsection}{\numberline {2.4.2}多图系统测试}{53}{subsubsection.2.4.2}%
\contentsline {subsection}{\numberline {2.5}实验小结}{58}{subsection.2.5}%
\contentsline {subsubsection}{\numberline {2.5.1}添加顶点后进行DFS/BFS失败}{58}{subsubsection.2.5.1}%
\contentsline {subsubsection}{\numberline {2.5.2}删除顶点后进行DFS/BFS失败}{58}{subsubsection.2.5.2}%
\contentsline {section}{\numberline {3}课程的收获和建议}{59}{section.3}%
\contentsline {subsection}{\numberline {3.1}基于链式存储结构的线性表实现}{59}{subsection.3.1}%
\contentsline {subsection}{\numberline {3.2}基于邻接表的图实现}{59}{subsection.3.2}%
\contentsline {subsection}{\numberline {3.3}搭建演示系统}{60}{subsection.3.3}%
\contentsline {subsection}{\numberline {3.4}代码规范}{60}{subsection.3.4}%
\contentsline {section}{参考文献}{61}{section*.147}%
\contentsline {section}{附录A 基于顺序存储结构的线性表实现}{62}{section*.148}%
\contentsline {section}{附录B 基于链式存储结构线性表实现的源程序}{90}{section*.149}%
\contentsline {section}{附录C 基于二叉链表的二叉树实现}{120}{section*.150}%
\contentsline {section}{附录D 基于邻接表图实现的源程序}{158}{section*.151}%
